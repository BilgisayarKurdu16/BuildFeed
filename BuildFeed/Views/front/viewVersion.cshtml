@using BuildFeed.Code
@using BuildFeed.Models
@using Humanizer
@model IEnumerable<BuildFeed.Models.BuildModel>
@{
   ViewBag.Title = string.Format("{0} {1}{2} | {3}", InvariantTerms.ProductName, ViewBag.ItemId, ViewBag.PageNumber == 1
                                                                                                            ? ""
                                                                                                            : string.Format(VariantTerms.Common_TitlePage, ViewBag.PageNumber), InvariantTerms.SiteName);
}

@section head
{
   @if (ViewBag.MetaItem != null)
   {
      <meta name="description" content="@ViewBag.MetaItem.MetaDescription" />
      <meta property="og:description" content="@ViewBag.MetaItem.MetaDescription" />
   }

   @if (ViewBag.PageNumber != 1)
   {
      <meta name="robots" content="noindex, follow" />
   }
}

<h1>@string.Format("{0} {1}", InvariantTerms.ProductName, ViewBag.ItemId)</h1>
@if (ViewBag.MetaItem != null && !string.IsNullOrWhiteSpace(ViewBag.MetaItem.PageContent))
{
   <h3>@VariantTerms.Front_About</h3>
   @Html.Raw(ViewBag.MetaItem.PageContent)
}
<h3>@VariantTerms.Front_Share</h3>
<div class="addthis_sharing_toolbox"></div>
<h3>@VariantTerms.Front_Listing</h3>
<div class="row">
   @foreach (BuildModel build in Model)
   {
      <div class="col-md-2 col-sm-3 col-xs-6 build-group">
         <h3 class="build-group-title no-wrapping" title="@build.Lab">
            <a href="@Url.Action("ViewBuild", new
                     {
                        id = build.Id
                     })">
               @($"{build.MajorVersion}.{build.MinorVersion}.{build.Number}.{build.Revision}")</a>
         </h3>
         @if (User.Identity.IsAuthenticated)
         {
            <p>
               <a href="@Url.Action("editBuild", new
                        {
                           id = build.Id
                        })" class="btn btn-primary btn-xs">
                  @VariantTerms.Front_Edit</a>
               @if (Roles.IsUserInRole("Administrators"))
               {
                  <a href="@Url.Action("DeleteBuild", new
                           {
                              id = build.Id
                           })" class="btn btn-danger btn-xs">
                     @VariantTerms.Front_Delete</a>
               }
            </p>
         }
         <p class="build-group-p">
            @if (!string.IsNullOrEmpty(build.Lab))
            {
               <div class="no-wrapping" title="@build.Lab">
                  <i class="fa fa-code-fork fa-fw"></i> @build.Lab</div>
            }
            @if (build.BuildTime.HasValue)
            {
               <span title="@build.BuildTime.Value.Humanize()"><i class="fa fa-calendar fa-fw"></i> @build.BuildTime.Value.ToLongDateWithoutDay()</span>
               <br />
               <span title="@build.BuildTime.Value.Humanize()"><i class="fa fa-clock-o fa-fw"></i> @build.BuildTime.Value.ToShortTimeString()</span>
               <br />
            }
         </p>
         <p>
            @if (build.IsLeaked)
            {
               <span class="label label-success label-build-status">@VariantTerms.Front_Public</span>
            }
            else
            {
               <span class="label label-danger label-build-status">@VariantTerms.Front_Private</span>
            }
         </p>
      </div>
   }
</div>
@PaginationHelpers.PaginationBlock((int)ViewBag.PageNumber, (int)ViewBag.PageCount, "viewVersion", ViewContext.RouteData.Values)