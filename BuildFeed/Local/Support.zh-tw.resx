<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountValidation" xml:space="preserve">
    <value>每個帳戶都將由管理者手動驗證，請耐心等候並在稍後回來。</value>
  </data>
  <data name="AdditionsToBuildFeed" xml:space="preserve">
    <value>新增到 BuildFeed 的紀錄數</value>
  </data>
  <data name="BuildsCompiled" xml:space="preserve">
    <value>完成編譯的組建數</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>變更您的密碼</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>確認新密碼</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>確認密碼</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>電子郵件信箱</value>
  </data>
  <data name="EnterCurrentPassword" xml:space="preserve">
    <value>輸入目前密碼</value>
  </data>
  <data name="EnterNewPassword" xml:space="preserve">
    <value>輸入新密碼</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>輸入密碼</value>
  </data>
  <data name="HighestVersion" xml:space="preserve">
    <value>最高版本</value>
  </data>
  <data name="Labs" xml:space="preserve">
    <value>Lab</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>登入</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密碼</value>
  </data>
  <data name="RecentlyAdded" xml:space="preserve">
    <value>最近新增</value>
  </data>
  <data name="RecentlyCompiled" xml:space="preserve">
    <value>最近編譯</value>
  </data>
  <data name="RecentlyLeaked" xml:space="preserve">
    <value>最近洩漏</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>註冊</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>記住我</value>
  </data>
  <data name="StatsCompiled" xml:space="preserve">
    <value>每季編譯的組建</value>
  </data>
  <data name="StatsLab" xml:space="preserve">
    <value>各 Lab 紀錄的次數</value>
  </data>
  <data name="StatsLabIncluded" xml:space="preserve">
    <value>只有超過 100 個組建被列入紀錄的 Lab 才會在此出現。</value>
  </data>
  <data name="StatsNewAdditions" xml:space="preserve">
    <value>過去一年內新增到 BuildFeed 的紀錄</value>
  </data>
  <data name="ThanksRegister" xml:space="preserve">
    <value>感謝您的註冊</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>使用者名稱</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>週次</value>
  </data>
</root>