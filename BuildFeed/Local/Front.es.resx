<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Sobre</value>
  </data>
  <data name="AddABuild" xml:space="preserve">
    <value>Añadir una compilación</value>
  </data>
  <data name="BuildMetaDate" xml:space="preserve">
    <value>Descubre sobre la compilación {0}, de {1} y compilada en {2}.</value>
  </data>
  <data name="BuildMetaNoDate" xml:space="preserve">
    <value>Descubra sobre la compilación {0} de Windows, de {1}. BuildFeed rastrea las compilaciones de Windows a lo largo del processo de desarrollo.</value>
  </data>
  <data name="BuildsFrom" xml:space="preserve">
    <value>Compilaciones de {0}</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditBuild" xml:space="preserve">
    <value>Editar compilación</value>
  </data>
  <data name="EditorActions" xml:space="preserve">
    <value>Acciones del editor</value>
  </data>
  <data name="HomepageH1" xml:space="preserve">
    <value>Lista de compilaciones de Windows NT</value>
  </data>
  <data name="LabMetaGeneric" xml:space="preserve">
    <value>Vea todas las compilaciones que han salido del laboratório de desarrollo {0} de Windows con el BuildFeed, una lista colaborativa de compilaciones de Windows</value>
  </data>
  <data name="Listing" xml:space="preserve">
    <value>Lista</value>
  </data>
  <data name="MoreFromLab" xml:space="preserve">
    <value>Vea más compilaciones de {0}</value>
  </data>
  <data name="MoreFromSource" xml:space="preserve">
    <value>Vea más compilaciones originales de {0}</value>
  </data>
  <data name="MoreFromYear" xml:space="preserve">
    <value>Vea más compilaciones compiladas en {0}</value>
  </data>
  <data name="NoLab" xml:space="preserve">
    <value>Sin cadena de laboratorio</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Privada</value>
  </data>
  <data name="Public" xml:space="preserve">
    <value>Pública</value>
  </data>
  <data name="QuickPaste" xml:space="preserve">
    <value>Pegar rápidamente</value>
  </data>
  <data name="ReturnToListing" xml:space="preserve">
    <value>Volver a la lista de compilaciones</value>
  </data>
  <data name="ReturnToOverview" xml:space="preserve">
    <value>Volver a la vista general</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Compartir</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Hoy</value>
  </data>
  <data name="xBuilds" xml:space="preserve">
    <value>{0} Compilaciones</value>
  </data>
  <data name="YearMetaGeneric" xml:space="preserve">
    <value>Vea una lista de todas las compilaciones de Windows hechas en {0}, y vea como Windows se desarrolló con el tiempo, con la lista colaborativa de compilaciones, BuildFeed</value>
  </data>
</root>