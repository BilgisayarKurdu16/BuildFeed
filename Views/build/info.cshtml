@model BuildFeed.Models.Build

@{
    ViewBag.Title = Model.FullBuildString + " | BuildFeed";
}

@section head
{
    <link href="@Url.Action()" rel="canonical" />
    <meta property="og:title" content="@Model.FullBuildString" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="@Url.Action()" />
    @if (Model.BuildTime.HasValue)
    {
        <meta name="description" content="Discover about Windows Build @Model.Number, from @Model.Lab and compiled on @Model.BuildTime.Value.ToString("d MMMM yyyy")." />
        <meta property="og:description" content="Discover about Windows Build @Model.Number, from @Model.Lab and compiled on @Model.BuildTime.Value.ToString("d MMMM yyyy")." />
    }
    else
    {
        <meta name="description" content="Discover about Windows Build @Model.Number, from @Model.Lab. BuildFeed tracks Windows builds throughout the development process." />
        <meta property="og:description" content="Discover about Windows Build @Model.Number, from @Model.Lab. BuildFeed tracks Windows builds throughout the development process." />
    }
}

<h2>@Model.FullBuildString</h2>

<div class="form-horizontal form-details">
    @if (User.Identity.IsAuthenticated)
    {
        <div class="form-group">
            <label class="control-label col-sm-2">Editor Actions</label>
            <div class="col-sm-10">
                <p class="form-control-static">
                    @Html.ActionLink("Edit", "edit", new { id = Model.Id }, new { @class = "btn btn-default btn-xs" })

                    @if (Roles.IsUserInRole("Administrators"))
                    {
                        @Html.ActionLink("Delete", "delete", new { id = Model.Id }, new { @class = "btn btn-danger btn-xs" })
                    }
                </p>
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.MajorVersion, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">@Html.DisplayFor(model => model.MajorVersion)</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinorVersion, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">@Html.DisplayFor(model => model.MinorVersion)</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Number, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">@Html.DisplayFor(model => model.Number)</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Revision, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">@Html.DisplayFor(model => model.Revision)</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lab, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">
                @Model.Lab<br />
                <a href="@Url.Action("lab", new { lab = Model.Lab })" class="more-link"><i class="fa fa-plus-square-o fa-sm"></i> Find more builds from @Model.Lab</a>
            </p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BuildTime, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">
                @if (Model.BuildTime.HasValue)
                {
                    <time datetime="@Model.BuildTime.Value.ToString("yyyy-MM-dd HH:mm")" title="@Model.BuildTime.Value.ToString("h:mm tt on dddd, d MMMM yyyy")">@Html.DisplayFor(model => model.BuildTime, "{0:yyMMdd-HHmm}")</time>
                    <br />
                    <a href="@Url.Action("year", new { year = Model.BuildTime.Value.Year })" class="more-link"><i class="fa fa-plus-square-o fa-sm"></i> Find more builds compiled in @Model.BuildTime.Value.Year</a>
                }
            </p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SourceType, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <p class="form-control-static">
                @Html.DisplayFor(model => model.SourceType, "Enumeration")<br />
                <a href="@Url.Action("source", new { source = Model.SourceType })" class="more-link"><i class="fa fa-plus-square-o fa-sm"></i> Find more builds sourced from @Html.DisplayFor(model => model.SourceType, "Enumeration")</a>
            </p>
        </div>
    </div>

    @if (Model.LeakDate.HasValue)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.LeakDate, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <div class="form-control-static"><time datetime="@Model.LeakDate.Value.ToString("yyyy-MM-dd")" title="@Model.LeakDate.Value.ToString("dddd, d MMMM yyyy")">@Html.DisplayFor(model => model.LeakDate, "{0:dd/MM/yyyy}")</time></div>
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.SourceDetails, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <div class="form-control-static">@Html.Raw(Model.SourceDetails)</div>
        </div>
    </div>

    @if ((Model.MajorVersion == 6 && Model.MinorVersion == 4) || (Model.MajorVersion == 10 && Model.MinorVersion == 0) && Model.FlightLevel != BuildFeed.Models.LevelOfFlight.None)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.FlightLevel, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(model => model.FlightLevel, "Enumeration")</p>
            </div>
        </div>
    }

    @if (Model.BetaWikiUri != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.BetaWikiUri, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    <a href="@Model.BetaWikiUri" target="_blank"><i class="fa fa-sm fa-link"></i> BetaWiki Article (Client)</a>
                </p>
            </div>
        </div>
    }

    @if (Model.BetaWikiServerUri != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.BetaWikiServerUri, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    <a href="@Model.BetaWikiServerUri" target="_blank"><i class="fa fa-sm fa-link"></i> BetaWiki Article (Server)</a>
                </p>
            </div>
        </div>
    }

    @if (Model.WinWorldPCUri != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.WinWorldPCUri, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    <a href="@Model.WinWorldPCUri" target="_blank"><i class="fa fa-sm fa-link"></i> WinWorldPC Library</a>
                </p>
            </div>
        </div>
    }

    @if (Model.BetaArchiveUri != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.BetaArchiveUri, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    <a href="@Model.BetaArchiveUri" target="_blank"><i class="fa fa-sm fa-link"></i> BetaArchive Wiki</a>
                </p>
            </div>
        </div>
    }

    @if (Model.MajorVersion == 6 && Model.MinorVersion == 0 && Model.LonghornMsUri != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.LonghornMsUri, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    <a href="@Model.LonghornMsUri" target="_blank"><i class="fa fa-sm fa-link"></i> Longhorn.ms Article</a>
                </p>
            </div>
        </div>
    }

    <div class="form-group">
        <label class="control-label col-sm-2">Share</label>
        <div class="col-sm-10">
            <div class="addthis_sharing_toolbox"></div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-2">Comments</label>
        <div class="col-sm-10">
            <div id="disqus_thread"></div>
            <script type="text/javascript">
                var disqus_shortname = 'buildfeed';
                var disqus_url = 'https://buildfeed.net' + '@Url.Action()';

                (function () {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script>
            <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <a href="/" class="btn btn-info">Return to Listing</a>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5431719a661cbfd0" async="async"></script>
}